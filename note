To toggle hidden files in mini.pick (a part of the mini.nvim library), you can customize the behavior of the picker by modifying the rg (ripgrep) command or creating a custom picker. Here's how you can do it:

1. Customize rg to Include Hidden Files

You can configure the mini.pick picker to include hidden files by adding the --hidden flag to the rg command. For example:

Copy the code
require('mini.pick').setup({
  sources = {
    builtin.cli({
      command = 'rg --files --hidden --glob "!.git/*"'
    })
  }
})


This setup ensures that hidden files (e.g., dotfiles) are included in the picker, while still excluding .git directory contents.

2. Create a Custom Picker

If you want more control, you can create a custom picker using builtin.cli():

Copy the code
local pick = require('mini.pick')

pick.setup({
  sources = {
    pick.builtin.cli({
      command = 'rg --files --hidden'
    })
  }
})


This allows you to define your own command for toggling hidden files.

3. Dynamic Toggle

For a dynamic toggle, you can create a keybinding or function to switch between showing and hiding hidden files:

Copy the code
local pick = require('mini.pick')

local show_hidden = false

function toggle_hidden_files()
  show_hidden = not show_hidden
  pick.setup({
    sources = {
      pick.builtin.cli({
        command = show_hidden and 'rg --files --hidden' or 'rg --files'
      })
    }
  })
end

vim.api.nvim_set_keymap('n', '<leader>th', ':lua toggle_hidden_files()<CR>', { noremap = true, silent = true })


This binds <leader>th to toggle hidden files dynamically.

Feel free to adapt these examples to your specific workflow!
